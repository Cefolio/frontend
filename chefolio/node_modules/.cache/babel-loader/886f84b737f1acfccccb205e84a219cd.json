{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tiffa\\\\Documents\\\\git\\\\frontend\\\\chefolio\\\\src\\\\components\\\\LoginForm.js\";\nimport React, { useState } from 'react';\nimport { withFormik, Form, Field } from 'formik';\nimport * as Yup from 'yup';\n\nfunction LoginForm({\n  errors,\n  touched\n}) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(Field, {\n    type: \"text\",\n    name: \"username\",\n    placeholder: \"Username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, touched.password && errors.password && React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, errors.password), React.createElement(Field, {\n    type: \"text\",\n    name: \"password\",\n    placeholder: \"Password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Login\")));\n}\n\nconst FormikLoginForm = withFormik({\n  mapPropsToValues({\n    username,\n    password\n  }) {\n    return {\n      username: username || \"\",\n      password: password || \"\"\n    };\n  },\n\n  //====VALIDATION=====\n  validationSchema: Yup.object().shape({\n    username: Yup.string().username().required('You must create a username!'),\n    password: Yup.string().min(3, \"Password must be 3 characters or longer\").required('Password is required')\n  }),\n\n  //====================\n  handleSubmit(values) {//HTTP request will be here once backend is done\n  }\n\n})(LoginForm);\nexport default FormikLoginForm;","map":{"version":3,"sources":["C:/Users/tiffa/Documents/git/frontend/chefolio/src/components/LoginForm.js"],"names":["React","useState","withFormik","Form","Field","Yup","LoginForm","errors","touched","password","FormikLoginForm","mapPropsToValues","username","validationSchema","object","shape","string","required","min","handleSubmit","values"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,UAAR,EAAoBC,IAApB,EAA0BC,KAA1B,QAAsC,QAAtC;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;;AAEA,SAASC,SAAT,CAAmB;AAAEC,EAAAA,MAAF;AAAUC,EAAAA;AAAV,CAAnB,EAAwC;AAEpC,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGI,oBAAC,KAAD;AACA,IAAA,IAAI,EAAC,MADL;AAEA,IAAA,IAAI,EAAC,UAFL;AAGA,IAAA,WAAW,EAAC,UAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EASK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,OAAO,CAACC,QAAR,IAAoBF,MAAM,CAACE,QAA3B,IAAuC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIF,MAAM,CAACE,QAAX,CAD5C,EAEI,oBAAC,KAAD;AACA,IAAA,IAAI,EAAC,MADL;AAEA,IAAA,IAAI,EAAC,UAFL;AAGA,IAAA,WAAW,EAAC,UAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CATL,EAiBK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAjBL,CADJ,CADJ;AAuBH;;AACD,MAAMC,eAAe,GAAGR,UAAU,CAAC;AAC/BS,EAAAA,gBAAgB,CAAC;AAAEC,IAAAA,QAAF;AAAYH,IAAAA;AAAZ,GAAD,EAAuB;AACnC,WAAO;AACHG,MAAAA,QAAQ,EAAEA,QAAQ,IAAI,EADnB;AAEHH,MAAAA,QAAQ,EAAEA,QAAQ,IAAI;AAFnB,KAAP;AAIH,GAN8B;;AAO/B;AACAI,EAAAA,gBAAgB,EAAER,GAAG,CAACS,MAAJ,GAAaC,KAAb,CAAmB;AACjCH,IAAAA,QAAQ,EAAEP,GAAG,CAACW,MAAJ,GACLJ,QADK,GAELK,QAFK,CAEI,6BAFJ,CADuB;AAIjCR,IAAAA,QAAQ,EAAEJ,GAAG,CAACW,MAAJ,GACLE,GADK,CACD,CADC,EACE,yCADF,EAELD,QAFK,CAEI,sBAFJ;AAJuB,GAAnB,CARa;;AAgB/B;AACAE,EAAAA,YAAY,CAACC,MAAD,EAAQ,CAChB;AACH;;AAnB8B,CAAD,CAAV,CAoBrBd,SApBqB,CAAxB;AAqBA,eAAeI,eAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport {withFormik, Form, Field} from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nfunction LoginForm({ errors, touched }) {\r\n   \r\n    return(\r\n        <div>\r\n            <Form>\r\n                \r\n               \r\n                <Field \r\n                type=\"text\"\r\n                name=\"username\"\r\n                placeholder=\"Username\"\r\n                />\r\n                 \r\n                 <div>\r\n                     {touched.password && errors.password && <p>{errors.password}</p>}\r\n                     <Field\r\n                     type=\"text\"\r\n                     name=\"password\"\r\n                     placeholder=\"Password\"\r\n                     />\r\n               </div>\r\n                 <button>Login</button>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\nconst FormikLoginForm = withFormik({\r\n    mapPropsToValues({ username, password}){\r\n        return {\r\n            username: username || \"\",\r\n            password: password || \"\"\r\n        };\r\n    },\r\n    //====VALIDATION=====\r\n    validationSchema: Yup.object().shape({\r\n        username: Yup.string()\r\n            .username()\r\n            .required('You must create a username!'),\r\n        password: Yup.string()\r\n            .min(3, \"Password must be 3 characters or longer\")\r\n            .required('Password is required')\r\n    }),\r\n    //====================\r\n    handleSubmit(values){\r\n        //HTTP request will be here once backend is done\r\n    }\r\n})(LoginForm);\r\nexport default FormikLoginForm;"]},"metadata":{},"sourceType":"module"}