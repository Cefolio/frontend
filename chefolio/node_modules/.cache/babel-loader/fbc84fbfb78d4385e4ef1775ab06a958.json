{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tiffa\\\\Documents\\\\git\\\\frontend\\\\chefolio\\\\src\\\\components\\\\RecipeCard.js\";\n// create a fetchRecipe and fetchChef action in actions\n// create a recipe, chef and isFetching state for initialState in reducers\n// When User clicks on \"More Info\" button, recipe instructions will be listed\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { fetchRecipe, fetchChef } from '../actions/actions';\nimport { Link } from 'react-router-dom'; // Change to index.scss once completed\n\nimport '../css/RecipeCard.scss';\n\nconst RecipeCard = props => {\n  return React.createElement(\"div\", {\n    className: \"recipe-card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, props.recipe.title), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Meal Type: \", props.recipe.mealType), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Chef Name: \", props.chef.name), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Ingredients: \", props.recipe.ingredients), localStorage.getItem('token') ? React.createElement(Link, {\n    to: `dashboard/${props.chef.id}/recipes/${props.recipe.id}`,\n    className: \"recipe-buttons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"More Info\") : React.createElement(Link, {\n    to: `chef/${props.chef.id}/recipes/${props.recipe.id}`,\n    className: \"recipe-buttons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"More Info\"));\n}; // const mapStateToProps = state => {\n//   return {\n//     recipe: state.recipe,\n//     chef: state.chef,\n//     isFetching: state.isFetching\n//   }\n// }\n// export default connect(mapStateToProps, { fetchRecipe, fetchChef })(RecipeCard);\n\n\nexport default RecipeCard;","map":{"version":3,"sources":["C:/Users/tiffa/Documents/git/frontend/chefolio/src/components/RecipeCard.js"],"names":["React","connect","fetchRecipe","fetchChef","Link","RecipeCard","props","recipe","title","mealType","chef","name","ingredients","localStorage","getItem","id"],"mappings":";AAAA;AACA;AAEA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,oBAAvC;AACA,SAASC,IAAT,QAAqB,kBAArB,C,CACA;;AACA,OAAO,wBAAP;;AAEA,MAAMC,UAAU,GAAGC,KAAK,IAAI;AAC1B,SACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKA,KAAK,CAACC,MAAN,CAAaC,KAAlB,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAeF,KAAK,CAACC,MAAN,CAAaE,QAA5B,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAeH,KAAK,CAACI,IAAN,CAAWC,IAA1B,CAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAiBL,KAAK,CAACC,MAAN,CAAaK,WAA9B,CALF,EAOGC,YAAY,CAACC,OAAb,CAAqB,OAArB,IACC,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAG,aAAYR,KAAK,CAACI,IAAN,CAAWK,EAAG,YAAWT,KAAK,CAACC,MAAN,CAAaQ,EAAG,EAAhE;AAAmE,IAAA,SAAS,EAAC,gBAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADD,GAKC,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAG,QAAOT,KAAK,CAACI,IAAN,CAAWK,EAAG,YAAWT,KAAK,CAACC,MAAN,CAAaQ,EAAG,EAA3D;AAA8D,IAAA,SAAS,EAAC,gBAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAZJ,CADF;AAmBD,CApBD,C,CAsBA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAEA,eAAeV,UAAf","sourcesContent":["// create a fetchRecipe and fetchChef action in actions\r\n// create a recipe, chef and isFetching state for initialState in reducers\r\n\r\n// When User clicks on \"More Info\" button, recipe instructions will be listed\r\n\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { fetchRecipe, fetchChef } from '../actions/actions';\r\nimport { Link } from 'react-router-dom';\r\n// Change to index.scss once completed\r\nimport '../css/RecipeCard.scss';\r\n\r\nconst RecipeCard = props => {\r\n  return (\r\n    <div className=\"recipe-card\">\r\n      {/* <img src={props.recipe.img} alt={props.recipe.title} /> */}\r\n      <h2>{props.recipe.title}</h2>\r\n      <p>Meal Type: {props.recipe.mealType}</p>\r\n      <p>Chef Name: {props.chef.name}</p>\r\n      <p>Ingredients: {props.recipe.ingredients}</p>\r\n\r\n      {localStorage.getItem('token') ?\r\n        <Link to={`dashboard/${props.chef.id}/recipes/${props.recipe.id}`} className=\"recipe-buttons\">\r\n          More Info\r\n        </Link>\r\n      :\r\n        <Link to={`chef/${props.chef.id}/recipes/${props.recipe.id}`} className=\"recipe-buttons\">\r\n          More Info\r\n        </Link>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\n// const mapStateToProps = state => {\r\n//   return {\r\n//     recipe: state.recipe,\r\n//     chef: state.chef,\r\n//     isFetching: state.isFetching\r\n//   }\r\n// }\r\n\r\n// export default connect(mapStateToProps, { fetchRecipe, fetchChef })(RecipeCard);\r\n\r\nexport default RecipeCard;"]},"metadata":{},"sourceType":"module"}